name: Container Image CI

on:
  push:
    branches:
      - main
      - v* # Triggers for feature branches prefixed with 'v'
      - workflow-test
    tags:
      - v* # Triggers for tags prefixed with 'v'
      # pull_request:
  #   branches:
  #     - main

env:
  IMAGE_NAME: omada-controller
  IMAGE_TAG:
  TEST_IMAGE_TAG: "5.15.20" # Set static value only when pushing branch workflow-test
  GITHUB_REGISTRY: ghcr.io/tinoha
  DOCKERHUB_REGISTRY: docker.io/tihal

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      packages: write # Grants permission to push Docker images to GHCR
      contents: read # Allows reading repository content (needed for actions/checkout)

    steps:
      - uses: actions/checkout@v4
        name: Checkout full repository history
        with:
          fetch-depth: 0 # Fetch full commit history

      # Extract version based on trigger source (branch, tag or static)
      - name: Set IMAGE_TAG (remove 'v' prefix)
        run: |
          set -e
          if [[ -n "${{env.TEST_IMAGE_TAG}}" && "${GITHUB_REF_NAME}" == "workflow-test" ]]; then
            echo "IMAGE_TAG=${{ env.TEST_IMAGE_TAG }}" >> $GITHUB_ENV
            echo "IMAGE_TAG set to ${IMAGE_TAG} (from static workflow variable)"
          elif [[ "${GITHUB_REF_NAME}" == "main" && "${GITHUB_REF_TYPE}" == "tag" ]]; then
            # Handle tag push, extract version from the tag
            echo "IMAGE_TAG=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
            echo "IMAGE_TAG set to ${IMAGE_TAG} (from tag)"
          elif [[ "${GITHUB_REF_NAME}" =~ ^v.* && "${GITHUB_REF_TYPE}" == "branch" ]]; then
            # Handle feature branch (v*) push, extract version from the branch name
            echo "IMAGE_TAG=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
            echo "IMAGE_TAG set to ${IMAGE_TAG} (from feature branch name)"
          elif [[ "${GITHUB_REF_NAME}" == "main" && "${GITHUB_REF_TYPE}" == "branch" ]]; then
            # Handle main branch push, extract version from git logs 
            MERGED_BRANCH="$(git reflog show --format='%gs' -n 1 | awk '/^merge/ {print $2}' | cut -d ':' -f 1)"
            echo "IMAGE_TAG=${MERGED_BRANCH#v}" >> $GITHUB_ENV
            echo "IMAGE_TAG set to ${IMAGE_TAG} (from git reflog and merge commit)"
          fi

      - name: Check IMAGE_TAG version string is valid
        run: |
          # Check valid version string for the IMAGE_TAG is set
          if [[ ! "${{ env.IMAGE_TAG }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            echo "Could not extract valid version string for the IMAGE_TAG variable. Exiting workflow." >&2
            exit 1
          fi
      - name: Log in to GitHub container registry
        if: github.ref != 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log in to Docker Hub container registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | podman login docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build the container image (with podman)
        run: ./build.sh --set-ver ${{ env.IMAGE_TAG }}

      - name: List images
        run: podman image ls

      - name: Push to GitHub container registry (GHCR)
        if: github.ref != 'refs/heads/main'
        run: |
          podman tag localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} && \
          podman push ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Push to Docker Hub container registry
        if: github.ref == 'refs/heads/main'
        run: |
          podman tag localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} && \
          podman push ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
